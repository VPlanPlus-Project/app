on:
    push:
        tags:
            - "v*"

permissions:
    contents: write

env:
    TAG_NAME: ${{ github.ref_name }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout sources
                uses: actions/checkout@v4

            -   name: Setup Java
                uses: actions/setup-java@v4
                with:
                    distribution: 'temurin'
                    java-version: 17
                    cache: 'gradle'
                    cache-dependency-path: |
                        ${{ github.workspace }}/gradle/wrapper/gradle-wrapper.properties
                        ${{ github.workspace }}/**/*.gradle*

            -   name: Setup Android SDK
                uses: android-actions/setup-android@v2

            -   name: Make gradlew executable
                run: chmod +x ./gradlew

            -   name: Restore google-services.json
                run: echo ${{ secrets.GOOGLE_SERVICES }} | base64 -d > ${GITHUB_WORKSPACE}/composeApp/google-services.json

            -   name: Restore playstore.keystore.jks
                run: echo ${{ secrets.KEYSTORE_FILE }} | base64 -d > ${GITHUB_WORKSPACE}/keystore.jks

            -   name: Add keystore information to local.properties
                run: echo "signing.default.file=${GITHUB_WORKSPACE}/keystore.jks" >> local.properties

            -   name: Add keystore password to local.properties
                run: echo "signing.default.storepassword=${{secrets.KEYSTORE_PASSWORD}}" >> local.properties

            -   name: Add keystore alias to local.properties
                run: echo "signing.default.keyalias=key0" >> local.properties

            -   name: Add keystore key password to local.properties
                run: echo "signing.default.keypassword=${{secrets.KEYSTORE_PASSWORD}}" >> local.properties

            -   uses: actions/cache@v4
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: Build APK
                run: ./gradlew :composeApp:assembleRelease

            -   name: Build App Bundle
                run: ./gradlew :composeApp:bundleRelease

            -   name: Upload build artifacts
                uses: actions/upload-artifact@v4
                with:
                    name: build-artifacts
                    path: |
                        composeApp/build/outputs/apk/release/composeApp-release.apk
                        composeApp/build/outputs/bundle/release/composeApp-release.aab

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -   name: Download build artifacts
                uses: actions/download-artifact@v4
                with:
                    name: build-artifacts

            -   name: Rename output files
                run: |
                    mv composeApp/build/outputs/apk/release/composeApp-release.apk ${{ env.TAG_NAME }}.apk
                    mv composeApp/build/outputs/bundle/release/composeApp-release.aab ${{ env.TAG_NAME }}.aab

            -   name: Create release
                uses: softprops/action-gh-release@v2
                with:
                    files: |
                        ${{ env.TAG_NAME }}.apk
                        ${{ env.TAG_NAME }}.aab
                    draft: false
                    prerelease: ${{ endsWith(env.TAG_NAME, '-closed') || endsWith(env.TAG_NAME, '-open') || endsWith(env.TAG_NAME, '-internal') }}
                    make_latest: true
                    name: VPlanPlus ${{ env.TAG_NAME }}
                    fail_on_unmatched_files: true
            -   name: Deploy on Google Play
                uses: r0adkll/upload-google-play@v1
                with:
                    serviceAccountJson: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
                    packageName: plus.vplan.app
                    releaseFiles: ${{ env.TAG_NAME }}.aab
                    track: ${{ endsWith(env.TAG_NAME, '-internal') && 'qa' || endsWith(env.TAG_NAME, '-closed') && 'alpha' || endsWith(env.TAG_NAME, '-open') && 'beta' || 'production' }}
                    releaseName: ${{ env.TAG_NAME }}
                    userFraction: 1